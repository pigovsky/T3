//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LectorsSeminarsWCFClientLayer.LectorsSeminarsDataAccessLayerWCFService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LectorsSeminarsDataAccessLayerWCFService.ILectorsSeminarsDataAccessLayerService")]
    public interface ILectorsSeminarsDataAccessLayerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/GetLectorNameById", ReplyAction="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/GetLectorNameByIdRespon" +
            "se")]
        string GetLectorNameById(string sessionKey, int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/GetLectorNameById", ReplyAction="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/GetLectorNameByIdRespon" +
            "se")]
        System.Threading.Tasks.Task<string> GetLectorNameByIdAsync(string sessionKey, int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/SetLectorNameById", ReplyAction="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/SetLectorNameByIdRespon" +
            "se")]
        void SetLectorNameById(string sessionKey, int Id, string Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/SetLectorNameById", ReplyAction="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/SetLectorNameByIdRespon" +
            "se")]
        System.Threading.Tasks.Task SetLectorNameByIdAsync(string sessionKey, int Id, string Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/GetLectorBirthdayById", ReplyAction="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/GetLectorBirthdayByIdRe" +
            "sponse")]
        string GetLectorBirthdayById(string sessionKey, int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/GetLectorBirthdayById", ReplyAction="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/GetLectorBirthdayByIdRe" +
            "sponse")]
        System.Threading.Tasks.Task<string> GetLectorBirthdayByIdAsync(string sessionKey, int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/SetLectorBirthdayById", ReplyAction="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/SetLectorBirthdayByIdRe" +
            "sponse")]
        void SetLectorBirthdayById(string sessionKey, int Id, string Birthday);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/SetLectorBirthdayById", ReplyAction="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/SetLectorBirthdayByIdRe" +
            "sponse")]
        System.Threading.Tasks.Task SetLectorBirthdayByIdAsync(string sessionKey, int Id, string Birthday);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/GetAllLectorIds", ReplyAction="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/GetAllLectorIdsResponse" +
            "")]
        int[] GetAllLectorIds(string sessionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/GetAllLectorIds", ReplyAction="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/GetAllLectorIdsResponse" +
            "")]
        System.Threading.Tasks.Task<int[]> GetAllLectorIdsAsync(string sessionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/GetAllLectorIdsFromSemi" +
            "nar", ReplyAction="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/GetAllLectorIdsFromSemi" +
            "narResponse")]
        int[] GetAllLectorIdsFromSeminar(string sessionKey, int seminarId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/GetAllLectorIdsFromSemi" +
            "nar", ReplyAction="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/GetAllLectorIdsFromSemi" +
            "narResponse")]
        System.Threading.Tasks.Task<int[]> GetAllLectorIdsFromSeminarAsync(string sessionKey, int seminarId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/GetAllSeminarIdsFromLec" +
            "tor", ReplyAction="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/GetAllSeminarIdsFromLec" +
            "torResponse")]
        int[] GetAllSeminarIdsFromLector(string sessionKey, int lectorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/GetAllSeminarIdsFromLec" +
            "tor", ReplyAction="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/GetAllSeminarIdsFromLec" +
            "torResponse")]
        System.Threading.Tasks.Task<int[]> GetAllSeminarIdsFromLectorAsync(string sessionKey, int lectorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/GetSeminarNameById", ReplyAction="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/GetSeminarNameByIdRespo" +
            "nse")]
        string GetSeminarNameById(string sessionKey, int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/GetSeminarNameById", ReplyAction="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/GetSeminarNameByIdRespo" +
            "nse")]
        System.Threading.Tasks.Task<string> GetSeminarNameByIdAsync(string sessionKey, int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/SetSeminarNameById", ReplyAction="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/SetSeminarNameByIdRespo" +
            "nse")]
        void SetSeminarNameById(string sessionKey, int Id, string Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/SetSeminarNameById", ReplyAction="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/SetSeminarNameByIdRespo" +
            "nse")]
        System.Threading.Tasks.Task SetSeminarNameByIdAsync(string sessionKey, int Id, string Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/GetAllSeminarIds", ReplyAction="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/GetAllSeminarIdsRespons" +
            "e")]
        int[] GetAllSeminarIds(string sessionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/GetAllSeminarIds", ReplyAction="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/GetAllSeminarIdsRespons" +
            "e")]
        System.Threading.Tasks.Task<int[]> GetAllSeminarIdsAsync(string sessionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/CreateSeminar", ReplyAction="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/CreateSeminarResponse")]
        int CreateSeminar(string sessionKey, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/CreateSeminar", ReplyAction="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/CreateSeminarResponse")]
        System.Threading.Tasks.Task<int> CreateSeminarAsync(string sessionKey, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/CreateLector", ReplyAction="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/CreateLectorResponse")]
        int CreateLector(string sessionKey, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/CreateLector", ReplyAction="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/CreateLectorResponse")]
        System.Threading.Tasks.Task<int> CreateLectorAsync(string sessionKey, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/SetLectorPhotoData", ReplyAction="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/SetLectorPhotoDataRespo" +
            "nse")]
        void SetLectorPhotoData(string sessionKey, int id, string data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/SetLectorPhotoData", ReplyAction="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/SetLectorPhotoDataRespo" +
            "nse")]
        System.Threading.Tasks.Task SetLectorPhotoDataAsync(string sessionKey, int id, string data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/GetLectorPhotoData", ReplyAction="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/GetLectorPhotoDataRespo" +
            "nse")]
        string GetLectorPhotoData(string sessionKey, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/GetLectorPhotoData", ReplyAction="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/GetLectorPhotoDataRespo" +
            "nse")]
        System.Threading.Tasks.Task<string> GetLectorPhotoDataAsync(string sessionKey, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/GetLectorPhotoName", ReplyAction="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/GetLectorPhotoNameRespo" +
            "nse")]
        string GetLectorPhotoName(string sessionKey, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/GetLectorPhotoName", ReplyAction="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/GetLectorPhotoNameRespo" +
            "nse")]
        System.Threading.Tasks.Task<string> GetLectorPhotoNameAsync(string sessionKey, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/AddSeminarToLector", ReplyAction="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/AddSeminarToLectorRespo" +
            "nse")]
        void AddSeminarToLector(string sessionKey, int lectorId, int seminarId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/AddSeminarToLector", ReplyAction="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/AddSeminarToLectorRespo" +
            "nse")]
        System.Threading.Tasks.Task AddSeminarToLectorAsync(string sessionKey, int lectorId, int seminarId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/AddLectorToSeminar", ReplyAction="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/AddLectorToSeminarRespo" +
            "nse")]
        void AddLectorToSeminar(string sessionKey, int lectorId, int seminarId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/AddLectorToSeminar", ReplyAction="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/AddLectorToSeminarRespo" +
            "nse")]
        System.Threading.Tasks.Task AddLectorToSeminarAsync(string sessionKey, int lectorId, int seminarId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/RemoveSeminarFromLector" +
            "", ReplyAction="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/RemoveSeminarFromLector" +
            "Response")]
        void RemoveSeminarFromLector(string sessionKey, int lectorId, int seminarId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/RemoveSeminarFromLector" +
            "", ReplyAction="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/RemoveSeminarFromLector" +
            "Response")]
        System.Threading.Tasks.Task RemoveSeminarFromLectorAsync(string sessionKey, int lectorId, int seminarId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/RemoveLectorFromSeminar" +
            "", ReplyAction="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/RemoveLectorFromSeminar" +
            "Response")]
        void RemoveLectorFromSeminar(string sessionKey, int lectorId, int seminarId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/RemoveLectorFromSeminar" +
            "", ReplyAction="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/RemoveLectorFromSeminar" +
            "Response")]
        System.Threading.Tasks.Task RemoveLectorFromSeminarAsync(string sessionKey, int lectorId, int seminarId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/DeleteSeminar", ReplyAction="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/DeleteSeminarResponse")]
        void DeleteSeminar(string sessionKey, int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/DeleteSeminar", ReplyAction="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/DeleteSeminarResponse")]
        System.Threading.Tasks.Task DeleteSeminarAsync(string sessionKey, int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/DeleteLector", ReplyAction="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/DeleteLectorResponse")]
        void DeleteLector(string sessionKey, int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/DeleteLector", ReplyAction="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/DeleteLectorResponse")]
        System.Threading.Tasks.Task DeleteLectorAsync(string sessionKey, int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/CloseSession", ReplyAction="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/CloseSessionResponse")]
        void CloseSession(string sessionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/CloseSession", ReplyAction="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/CloseSessionResponse")]
        System.Threading.Tasks.Task CloseSessionAsync(string sessionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/DoWork", ReplyAction="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/DoWorkResponse")]
        string DoWork(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/DoWork", ReplyAction="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/DoWorkResponse")]
        System.Threading.Tasks.Task<string> DoWorkAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/GenerateSession", ReplyAction="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/GenerateSessionResponse" +
            "")]
        string GenerateSession();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/GenerateSession", ReplyAction="http://tempuri.org/ILectorsSeminarsDataAccessLayerService/GenerateSessionResponse" +
            "")]
        System.Threading.Tasks.Task<string> GenerateSessionAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILectorsSeminarsDataAccessLayerServiceChannel : LectorsSeminarsWCFClientLayer.LectorsSeminarsDataAccessLayerWCFService.ILectorsSeminarsDataAccessLayerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LectorsSeminarsDataAccessLayerServiceClient : System.ServiceModel.ClientBase<LectorsSeminarsWCFClientLayer.LectorsSeminarsDataAccessLayerWCFService.ILectorsSeminarsDataAccessLayerService>, LectorsSeminarsWCFClientLayer.LectorsSeminarsDataAccessLayerWCFService.ILectorsSeminarsDataAccessLayerService {
        
        public LectorsSeminarsDataAccessLayerServiceClient() {
        }
        
        public LectorsSeminarsDataAccessLayerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LectorsSeminarsDataAccessLayerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LectorsSeminarsDataAccessLayerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LectorsSeminarsDataAccessLayerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetLectorNameById(string sessionKey, int Id) {
            return base.Channel.GetLectorNameById(sessionKey, Id);
        }
        
        public System.Threading.Tasks.Task<string> GetLectorNameByIdAsync(string sessionKey, int Id) {
            return base.Channel.GetLectorNameByIdAsync(sessionKey, Id);
        }
        
        public void SetLectorNameById(string sessionKey, int Id, string Name) {
            base.Channel.SetLectorNameById(sessionKey, Id, Name);
        }
        
        public System.Threading.Tasks.Task SetLectorNameByIdAsync(string sessionKey, int Id, string Name) {
            return base.Channel.SetLectorNameByIdAsync(sessionKey, Id, Name);
        }
        
        public string GetLectorBirthdayById(string sessionKey, int Id) {
            return base.Channel.GetLectorBirthdayById(sessionKey, Id);
        }
        
        public System.Threading.Tasks.Task<string> GetLectorBirthdayByIdAsync(string sessionKey, int Id) {
            return base.Channel.GetLectorBirthdayByIdAsync(sessionKey, Id);
        }
        
        public void SetLectorBirthdayById(string sessionKey, int Id, string Birthday) {
            base.Channel.SetLectorBirthdayById(sessionKey, Id, Birthday);
        }
        
        public System.Threading.Tasks.Task SetLectorBirthdayByIdAsync(string sessionKey, int Id, string Birthday) {
            return base.Channel.SetLectorBirthdayByIdAsync(sessionKey, Id, Birthday);
        }
        
        public int[] GetAllLectorIds(string sessionKey) {
            return base.Channel.GetAllLectorIds(sessionKey);
        }
        
        public System.Threading.Tasks.Task<int[]> GetAllLectorIdsAsync(string sessionKey) {
            return base.Channel.GetAllLectorIdsAsync(sessionKey);
        }
        
        public int[] GetAllLectorIdsFromSeminar(string sessionKey, int seminarId) {
            return base.Channel.GetAllLectorIdsFromSeminar(sessionKey, seminarId);
        }
        
        public System.Threading.Tasks.Task<int[]> GetAllLectorIdsFromSeminarAsync(string sessionKey, int seminarId) {
            return base.Channel.GetAllLectorIdsFromSeminarAsync(sessionKey, seminarId);
        }
        
        public int[] GetAllSeminarIdsFromLector(string sessionKey, int lectorId) {
            return base.Channel.GetAllSeminarIdsFromLector(sessionKey, lectorId);
        }
        
        public System.Threading.Tasks.Task<int[]> GetAllSeminarIdsFromLectorAsync(string sessionKey, int lectorId) {
            return base.Channel.GetAllSeminarIdsFromLectorAsync(sessionKey, lectorId);
        }
        
        public string GetSeminarNameById(string sessionKey, int Id) {
            return base.Channel.GetSeminarNameById(sessionKey, Id);
        }
        
        public System.Threading.Tasks.Task<string> GetSeminarNameByIdAsync(string sessionKey, int Id) {
            return base.Channel.GetSeminarNameByIdAsync(sessionKey, Id);
        }
        
        public void SetSeminarNameById(string sessionKey, int Id, string Name) {
            base.Channel.SetSeminarNameById(sessionKey, Id, Name);
        }
        
        public System.Threading.Tasks.Task SetSeminarNameByIdAsync(string sessionKey, int Id, string Name) {
            return base.Channel.SetSeminarNameByIdAsync(sessionKey, Id, Name);
        }
        
        public int[] GetAllSeminarIds(string sessionKey) {
            return base.Channel.GetAllSeminarIds(sessionKey);
        }
        
        public System.Threading.Tasks.Task<int[]> GetAllSeminarIdsAsync(string sessionKey) {
            return base.Channel.GetAllSeminarIdsAsync(sessionKey);
        }
        
        public int CreateSeminar(string sessionKey, string name) {
            return base.Channel.CreateSeminar(sessionKey, name);
        }
        
        public System.Threading.Tasks.Task<int> CreateSeminarAsync(string sessionKey, string name) {
            return base.Channel.CreateSeminarAsync(sessionKey, name);
        }
        
        public int CreateLector(string sessionKey, string name) {
            return base.Channel.CreateLector(sessionKey, name);
        }
        
        public System.Threading.Tasks.Task<int> CreateLectorAsync(string sessionKey, string name) {
            return base.Channel.CreateLectorAsync(sessionKey, name);
        }
        
        public void SetLectorPhotoData(string sessionKey, int id, string data) {
            base.Channel.SetLectorPhotoData(sessionKey, id, data);
        }
        
        public System.Threading.Tasks.Task SetLectorPhotoDataAsync(string sessionKey, int id, string data) {
            return base.Channel.SetLectorPhotoDataAsync(sessionKey, id, data);
        }
        
        public string GetLectorPhotoData(string sessionKey, int id) {
            return base.Channel.GetLectorPhotoData(sessionKey, id);
        }
        
        public System.Threading.Tasks.Task<string> GetLectorPhotoDataAsync(string sessionKey, int id) {
            return base.Channel.GetLectorPhotoDataAsync(sessionKey, id);
        }
        
        public string GetLectorPhotoName(string sessionKey, int id) {
            return base.Channel.GetLectorPhotoName(sessionKey, id);
        }
        
        public System.Threading.Tasks.Task<string> GetLectorPhotoNameAsync(string sessionKey, int id) {
            return base.Channel.GetLectorPhotoNameAsync(sessionKey, id);
        }
        
        public void AddSeminarToLector(string sessionKey, int lectorId, int seminarId) {
            base.Channel.AddSeminarToLector(sessionKey, lectorId, seminarId);
        }
        
        public System.Threading.Tasks.Task AddSeminarToLectorAsync(string sessionKey, int lectorId, int seminarId) {
            return base.Channel.AddSeminarToLectorAsync(sessionKey, lectorId, seminarId);
        }
        
        public void AddLectorToSeminar(string sessionKey, int lectorId, int seminarId) {
            base.Channel.AddLectorToSeminar(sessionKey, lectorId, seminarId);
        }
        
        public System.Threading.Tasks.Task AddLectorToSeminarAsync(string sessionKey, int lectorId, int seminarId) {
            return base.Channel.AddLectorToSeminarAsync(sessionKey, lectorId, seminarId);
        }
        
        public void RemoveSeminarFromLector(string sessionKey, int lectorId, int seminarId) {
            base.Channel.RemoveSeminarFromLector(sessionKey, lectorId, seminarId);
        }
        
        public System.Threading.Tasks.Task RemoveSeminarFromLectorAsync(string sessionKey, int lectorId, int seminarId) {
            return base.Channel.RemoveSeminarFromLectorAsync(sessionKey, lectorId, seminarId);
        }
        
        public void RemoveLectorFromSeminar(string sessionKey, int lectorId, int seminarId) {
            base.Channel.RemoveLectorFromSeminar(sessionKey, lectorId, seminarId);
        }
        
        public System.Threading.Tasks.Task RemoveLectorFromSeminarAsync(string sessionKey, int lectorId, int seminarId) {
            return base.Channel.RemoveLectorFromSeminarAsync(sessionKey, lectorId, seminarId);
        }
        
        public void DeleteSeminar(string sessionKey, int Id) {
            base.Channel.DeleteSeminar(sessionKey, Id);
        }
        
        public System.Threading.Tasks.Task DeleteSeminarAsync(string sessionKey, int Id) {
            return base.Channel.DeleteSeminarAsync(sessionKey, Id);
        }
        
        public void DeleteLector(string sessionKey, int Id) {
            base.Channel.DeleteLector(sessionKey, Id);
        }
        
        public System.Threading.Tasks.Task DeleteLectorAsync(string sessionKey, int Id) {
            return base.Channel.DeleteLectorAsync(sessionKey, Id);
        }
        
        public void CloseSession(string sessionKey) {
            base.Channel.CloseSession(sessionKey);
        }
        
        public System.Threading.Tasks.Task CloseSessionAsync(string sessionKey) {
            return base.Channel.CloseSessionAsync(sessionKey);
        }
        
        public string DoWork(string name) {
            return base.Channel.DoWork(name);
        }
        
        public System.Threading.Tasks.Task<string> DoWorkAsync(string name) {
            return base.Channel.DoWorkAsync(name);
        }
        
        public string GenerateSession() {
            return base.Channel.GenerateSession();
        }
        
        public System.Threading.Tasks.Task<string> GenerateSessionAsync() {
            return base.Channel.GenerateSessionAsync();
        }
    }
}
